<!DOCTYPE html>
<html>

<head>
  <title>Enigma</title>
  <style>
    body {
      margin: 0;
      padding-bottom: 3rem;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    #form {
      background: rgba(0, 0, 0, 0.15);
      padding: 0.25rem;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      height: 3rem;
      box-sizing: border-box;
      backdrop-filter: blur(10px);
    }

    #input {
      border: none;
      padding: 0 1rem;
      flex-grow: 1;
      border-radius: 2rem;
      margin: 0.25rem;
    }

    #input:focus {
      outline: none;
    }

    #form>button {
      background: #333;
      border: none;
      padding: 0 1rem;
      margin: 0.25rem;
      border-radius: 3px;
      outline: none;
      color: #fff;
    }

    .cap {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    .cap>li {
      padding: 0.5rem 1rem;
      border-bottom: 2px solid green;
    }

    .cap>li:nth-child(odd) {
      background: #efefef;
    }

    
    @media screen and (max-width: 1100px) {
      .cap>li {
        font-size: 32px !important;
      }

      body {
        padding-bottom: 100px !important;
      }

      #form {
        height: 110px !important;
      }

      #input {
        font-size: 32px !important;
        width:100% !important;
      }
      #form >button {
    width: 20%;
    font-size: 30px;
}
    }
  </style>
</head>

<body>
  <ul id="messages" class="cap"></ul>
  <form id="form" action="">
    <input id="input" autocomplete="off" /><button>Send</button>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
  <script>

  var keyHandling = (function() {
    var key;
    function privateFunction(text, decrypt) {

try{    return  decrypt ? CryptoJS.AES.decrypt(text, key).toString(CryptoJS.enc.Utf8): CryptoJS.AES.encrypt(text, key).toString();
}
catch(e){
  return "";
}

    }
    return {
    setPrivateVariable: function() {
      key = prompt('Key:');
    },
    decryptEncrypt: function(text, decrypt) {
      let response =  privateFunction(text, decrypt); // Call the private function
    return response;
    }
  };
})();

  keyHandling.setPrivateVariable();
    var chatHistory = <%- JSON.stringify(msgs) %>;
    var socket = io();
    var messages = document.getElementById('messages');
    var form = document.getElementById('form');
    var input = document.getElementById('input');
    chatHistory.forEach((el) => {

      let item = document.createElement('li');
        var ipAddr= el[1].substr(7);

        var arrayedIp = ipAddr.split('.');

const thirdChar = Number(arrayedIp[3]);
      item.textContent = keyHandling.decryptEncrypt(el[0], true);
        item.style.backgroundColor=el[1];
        item.style.color="gray";
        item.textContent !="" && messages.appendChild(item);
    });
    form.addEventListener('submit', function (e) {
      e.preventDefault();
      if (input.value) {
        socket.emit('chat message', 
        keyHandling.decryptEncrypt(input.value, false));
        input.value = '';
      }
    });

    socket.on('chat message', function (msg) {
      var item = document.createElement('li');
      item.textContent = keyHandling.decryptEncrypt(msg, true);
            messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    });
  </script>
</body>
</html>
